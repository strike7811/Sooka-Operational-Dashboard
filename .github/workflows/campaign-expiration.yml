name: Campaign Expiration Email Notification

on:
  schedule:
    - cron: '0 0 * * *'  # Runs once a day at midnight UTC
  workflow_dispatch:

jobs:
  check-campaigns:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Generate Email Body
      run: |
        echo "Generating email content..."

        # Create the JavaScript file safely
        echo "const fs = require('fs');" > generate_email.js
        echo "const campaignData = JSON.parse(fs.readFileSync('campaign.json', 'utf8'));" >> generate_email.js
        echo "const today = new Date();" >> generate_email.js
        echo "const twoWeeks = 14 * 24 * 60 * 60 * 1000;" >> generate_email.js
        echo "const expiringCampaigns = campaignData.filter(campaign => {" >> generate_email.js
        echo "  if (campaign.status !== 'Active') return false;" >> generate_email.js
        echo "  const endDate = new Date(campaign.endDate);" >> generate_email.js
        echo "  return endDate.getTime() - today.getTime() <= twoWeeks && endDate.getTime() > today.getTime();" >> generate_email.js
        echo "});" >> generate_email.js

        echo "let emailBody = 'Campaign Expiration Reminder\\n\\n';" >> generate_email.js
        echo "if (expiringCampaigns.length > 0) {" >> generate_email.js
        echo "  emailBody += 'The following campaigns are about to expire. Please take action:\\n\\n';" >> generate_email.js
        echo "  emailBody += '------------------------------------------------\\n';" >> generate_email.js
        echo "  emailBody += 'End Date       | Campaign Name\\n';" >> generate_email.js
        echo "  emailBody += '------------------------------------------------\\n';" >> generate_email.js
        echo "  expiringCampaigns.forEach(campaign => {" >> generate_email.js
        echo "    const endDate = new Date(campaign.endDate).toISOString().split('T')[0];" >> generate_email.js
        echo "    emailBody += \`\${endDate}   | \${campaign.campaignName}\\n\`;" >> generate_email.js
        echo "  });" >> generate_email.js
        echo "  emailBody += '------------------------------------------------\\n\\n';" >> generate_email.js
        echo "  emailBody += 'Please review and decide whether to extend or take necessary actions.\\n\\n';" >> generate_email.js
        echo "  emailBody += \`GitHub Repository: https://github.com/${GITHUB_REPOSITORY}\\n\\n\`;" >> generate_email.js
        echo "  emailBody += 'This is an automated notification from GitHub Actions. Please do not reply.';" >> generate_email.js
        echo "} else {" >> generate_email.js
        echo "  emailBody += 'No campaigns are expiring soon.';" >> generate_email.js
        echo "}" >> generate_email.js

        echo "fs.writeFileSync('email_body.txt', emailBody);" >> generate_email.js

        # Run the script to generate the email
        node generate_email.js

        # Store the email body in an environment variable for sending
        echo "EMAIL_BODY<<EOF" >> $GITHUB_ENV
        cat email_body.txt >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Send Email Notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Campaign Expiration Reminder"
        body: ${{ env.EMAIL_BODY }}
        to: "kohch7811@gmail.com"
        from: "GitHub Actions"
